//var url = require('url');
//var symutil = require('sym-util');
var settings = require('proj-settings');


var URLManager = (function(){
	/* generates both JIRA and confluence url */
	var hostname,
		pathName,
		queryString,
		projectID, 
		sprintID;

	var getConfluenceURL = function(start,end) {
		var start = convertToISODate(start);
		var end = convertToISODate(end);
		var params = {
			"subCalendarId" : settings.confluence.subCalendarId,
			"userTimeZoneId" : settings.confluence.userTimeZoneId,
			"start" : start,
			"end" : end
		}

		var hostname = settings.confluence.hostname;
		var pathname = settings.confluence.calendarPath;

		var apiURL = generateURL(hostname,pathname,params);

		return apiURL;
	}

	return {
		getConfluenceURL : getConfluenceURL
	}

})();




function convertToISODate(str){
	str =  (new Date(str)).toISOString();
	str = str.replace(str.match(/\.\d+/g)[0],"");
	str = str.replace(/(:)/g,"%3A");
	return str;
}

/* converts param object to queryString */
function objToQueryString(obj){
	var str = "?";
	for(key of Object.keys(obj)){
		str += key+ "="+ obj[key]+ "&";
	}
	return str.substring(0,str.length - 1);
}

function generateURL(hostName,pathName,params){
	var objURL = {
		hostName : hostName,
		pathName : pathName, 
		params : params
	}
	return convertObjtoURL(objURL);
}

function convertObjtoURL(obj){
	var strURL = "";
	strURL += "https://"
	if(obj.hasOwnProperty("hostName")){
		strURL += obj.hostName;
	}
	if(obj.hasOwnProperty("pathName")){
		strURL += obj.pathName;
	}
	if(obj.hasOwnProperty("params")){
		var queryString = objToQueryString(obj.params);
		strURL += queryString;
	}
	return strURL;
}